defmodule SoonReady.Repo.Migrations.CreateRenamedIamTables do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:identity_and_access_management__resources__users, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :username, :citext, null: false
      add :hashed_password, :text, null: false
    end

    create unique_index(:identity_and_access_management__resources__users, [:username],
             name: "identity_and_access_management__resources__users_unique_username_index"
           )

    create table(:identity_and_access_management__resources__tokens, primary_key: false) do
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :created_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :extra_data, :map
      add :purpose, :text, null: false
      add :expires_at, :utc_datetime, null: false
      add :subject, :text, null: false
      add :jti, :text, null: false, primary_key: true
    end

    drop constraint(
           :identity_and_access_management__resources__researchers,
           "identity_and_access_management__resources__researchers_user_id_fkey"
         )

    alter table(:identity_and_access_management__resources__researchers) do
      modify :user_id,
             references(:identity_and_access_management__resources__users,
               column: :id,
               name: "identity_and_access_management__resources__researchers_user_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    execute(
      "ALTER TABLE identity_and_access_management__resources__researchers alter CONSTRAINT identity_and_access_management__resources__researchers_user_id_fkey NOT DEFERRABLE"
    )
  end

  def down do
    drop constraint(
           :identity_and_access_management__resources__researchers,
           "identity_and_access_management__resources__researchers_user_id_fkey"
         )

    alter table(:identity_and_access_management__resources__researchers) do
      modify :user_id,
             references(:user_authentication__entities__users,
               column: :id,
               name: "identity_and_access_management__resources__researchers_user_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    drop table(:identity_and_access_management__resources__tokens)

    drop_if_exists unique_index(:identity_and_access_management__resources__users, [:username],
                     name:
                       "identity_and_access_management__resources__users_unique_username_index"
                   )

    drop table(:identity_and_access_management__resources__users)
  end
end
